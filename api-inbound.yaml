openapi: 3.0.0
x-runtime:
  httpserver:
    address: ":8080"
  logger:
    level: "INFO"
    output: "STDOUT"
  stats:
    output: "NULL"
  signals:
    installed:
      - "OS"
    os:
      signals:
        - 2 # SIGINT
        - 15 # SIGTERM
  connstate:
    reportinterval: "5s"
    hijackedcounter: "http.server.connstate.hijacked"
    closedcounter: "http.server.connstate.closed"
    idlegauge: "http.server.connstate.idle.gauge"
    idlecounter: "http.server.connstate.idle"
    activegauge: "http.server.connstate.active.gauge"
    activecounter: "http.server.connstate.active"
    newgauge: "http.server.connstate.new.gauge"
    newcounter: "http.server.connstate.new"
x-transportd:
  backends:
    - app
  app:
    host: "http://app:8081"
    pool:
      ttl: "24h"
      count: 1
info:
  version: 1.0.0
  title: "nexpose-asset-producer"
  description: "A service that gets the latest Nexpose scan results and publishes the found vulnerabilities to an event stream"
  contact:
    name: Security Development
    email: secdev-external@atlassian.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /healthcheck:
    get:
      description: "Liveness check."
      responses:
        "200":
          description: "Success."
      x-transportd:
        backend: app
  /dependencycheck:
    get:
      description: "Dependency check."
      responses:
        "200":
          description: "Success."
      x-transportd:
        backend: app
        enabled:
          - "metrics"
          - "accesslog"
          - "lambda"
        lambda:
          arn: "dependencycheck"
          async: false
          request: '#! json .Request.Body !#'
          success: '{"status": 200, "bodyPassthrough": true}'
          error: '{"status": 500, "bodyPassthrough": true}'
  /notification:
    post:
      description: Get scanned assets and vulnerabilities from last scan for given site and publish them onto an event stream.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanNotification'
      responses:
        "204":
          description: "No content"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-transportd:
        backend: app
        enabled:
          - "accesslog"
          - "requestvalidation"
          - "lambda"
        lambda:
          arn: "notification"
          async: false
          request: '#! json .Request.Body !#'
          success: '{"status": 204, "bodyPassthrough": true}'
          error: >
            {
              "status":
                #! if eq .Response.Body.errorType "ErrorFetchingAssets" !# 502,
                #! else !# 500,
                #! end !#
              "body": {
                #! if eq .Response.Body.errorType "ErrorFetchingAssets" !#
                "code": 502, "status": "Bad Gateway",
                #! else !#
                "code": 500, "status": "Internal Server Error",
                #! end !#
              }
            }

components:
  schemas:
    ScanNotification:
      type: object
      required:
        - siteID
        - scanID
        - startTime
        - endTime
        - scanType
      properties:
        scanID:
          type: string
          description: The Nexpose scan ID for the completed scan.
        siteID:
          type: string
          description: The Nexpose site ID for the site that just got scanned.
        endTime:
          type: string
          format: date-time
          description: The time the scan finished in ISO8601 format.
        startTime:
          type: string
          format: date-time
          description: The time the scan finished in ISO8601 format.
        scanType:
          type: string
          description: The type of scan done on the asset, remote or local.
    Error:
      type: object
      properties:
        errorMessage:
          type: string
        errorType:
          type: string
        stackTrace:
          type: array
          items:
            type: string
