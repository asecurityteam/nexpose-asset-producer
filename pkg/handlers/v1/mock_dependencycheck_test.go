// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/domain/dependencycheck.go

// Package v1 is a generated GoMock package.
package v1

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDependencyCheck is a mock of DependencyCheck interface
type MockDependencyCheck struct {
	ctrl     *gomock.Controller
	recorder *MockDependencyCheckMockRecorder
}

// MockDependencyCheckMockRecorder is the mock recorder for MockDependencyCheck
type MockDependencyCheckMockRecorder struct {
	mock *MockDependencyCheck
}

// NewMockDependencyCheck creates a new mock instance
func NewMockDependencyCheck(ctrl *gomock.Controller) *MockDependencyCheck {
	mock := &MockDependencyCheck{ctrl: ctrl}
	mock.recorder = &MockDependencyCheckMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDependencyCheck) EXPECT() *MockDependencyCheckMockRecorder {
	return m.recorder
}

// CheckDependencies mocks base method
func (m *MockDependencyCheck) CheckDependencies(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckDependencies", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckDependencies indicates an expected call of CheckDependencies
func (mr *MockDependencyCheckMockRecorder) CheckDependencies(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckDependencies", reflect.TypeOf((*MockDependencyCheck)(nil).CheckDependencies), ctx)
}
