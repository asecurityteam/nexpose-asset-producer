// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/domain/dependencycheck.go

// Package v1 is a generated GoMock package.
package v1

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDependencyChecker is a mock of DependencyChecker interface
type MockDependencyChecker struct {
	ctrl     *gomock.Controller
	recorder *MockDependencyCheckerMockRecorder
}

// MockDependencyCheckerMockRecorder is the mock recorder for MockDependencyChecker
type MockDependencyCheckerMockRecorder struct {
	mock *MockDependencyChecker
}

// NewMockDependencyChecker creates a new mock instance
func NewMockDependencyChecker(ctrl *gomock.Controller) *MockDependencyChecker {
	mock := &MockDependencyChecker{ctrl: ctrl}
	mock.recorder = &MockDependencyCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDependencyChecker) EXPECT() *MockDependencyCheckerMockRecorder {
	return m.recorder
}

// CheckDependencies mocks base method
func (m *MockDependencyChecker) CheckDependencies(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckDependencies", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckDependencies indicates an expected call of CheckDependencies
func (mr *MockDependencyCheckerMockRecorder) CheckDependencies(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckDependencies", reflect.TypeOf((*MockDependencyChecker)(nil).CheckDependencies), arg0)
}
